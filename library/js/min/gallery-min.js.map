{"version":3,"sources":["../gallery.js"],"names":["Gallery","gallery","console","log","Error","currentImage","images","Array","from","querySelectorAll","modal","document","querySelector","prevButton","nextButton","closeModal","classList","remove","window","removeEventListener","handleKeyUp","showNextImage","showPrevImage","event","key","showImage","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","el","src","textContent","title","dataset","description","info","matches","add","addEventListener","forEach","image","e","currentTarget","target"],"mappings":"aAEA,SAASA,QAAQC,GAKb,GAHAC,QAAQC,IAAI,aAGPF,EACH,MAAM,IAAIG,MAAM,qBAGlB,IAIIC,EAJEC,EAASC,MAAMC,KAAKP,EAAQQ,iBAAiB,QAC7CC,EAAQC,SAASC,cAAc,kBAC/BC,EAAaH,EAAME,cAAc,SACjCE,EAAaJ,EAAME,cAAc,SAkBvC,SAASG,IACPL,EAAMM,UAAUC,OAAO,QAEvBC,OAAOC,oBAAoB,QAASC,GACpCN,EAAWK,oBAAoB,QAASE,GACxCR,EAAWM,oBAAoB,QAASG,GAS1C,SAASF,EAAYG,GACnB,MAAkB,WAAdA,EAAMC,IAAyBT,IACjB,eAAdQ,EAAMC,IAA6BH,IACrB,cAAdE,EAAMC,IAA4BF,SAAtC,EAGF,SAASD,IACPI,EAAUpB,EAAaqB,oBAAsBzB,EAAQ0B,mBAEvD,SAASL,IACPG,EAAUpB,EAAauB,wBAA0B3B,EAAQ4B,kBAG3D,SAASJ,EAAUK,GACZA,GAKL5B,QAAQC,IAAI2B,GACZpB,EAAME,cAAc,OAAOmB,IAAMD,EAAGC,IACpCrB,EAAME,cAAc,MAAMoB,YAAcF,EAAGG,MAC3CvB,EAAME,cAAc,YAAYoB,YAAcF,EAAGI,QAAQC,YACzD9B,EAAeyB,EAnDf5B,QAAQkC,KAAK,oBAET1B,EAAM2B,QAAQ,SAChBnC,QAAQkC,KAAK,uBAGf1B,EAAMM,UAAUsB,IAAI,QAGpBpB,OAAOqB,iBAAiB,QAASnB,GACjCN,EAAWyB,iBAAiB,QAASlB,GACrCR,EAAW0B,iBAAiB,QAASjB,KAgCnCpB,QAAQkC,KAAK,oBAajB9B,EAAOkC,SAAQ,SAAAC,GAAK,OAClBA,EAAMF,iBAAiB,SAAS,SAAAG,GAAC,OAAIjB,EAAUiB,EAAEC,qBAInDrC,EAAOkC,SAAQ,SAAAC,GAEbA,EAAMF,iBAAiB,SAAS,SAAAG,GAEhB,UAAVA,EAAElB,KAEJC,EAAUiB,EAAEC,qBAKlBjC,EAAM6B,iBAAiB,SAlDvB,SAA4BG,GACtBA,EAAEE,SAAWF,EAAEC,eACjB5B,OA1CRb,QAAQC,IAAI,SA+FVH,QAAQW,SAASC,cAAc","sourcesContent":["console.log('hello')\n\nfunction Gallery(gallery) {\n\n    console.log('hellotwo')\n\n\n    if (!gallery) {\n      throw new Error('No Gallery Found!');\n    }\n    // select the elements we need\n    const images = Array.from(gallery.querySelectorAll('img'));\n    const modal = document.querySelector('.gallery-modal');\n    const prevButton = modal.querySelector('.prev');\n    const nextButton = modal.querySelector('.next');\n    let currentImage;\n  \n    function openModal() {\n      console.info('Opening Modal...');\n      // First check if the modal is already open\n      if (modal.matches('.open')) {\n        console.info('Madal already open');\n        return; // stop the function from running\n      }\n      modal.classList.add('open');\n  \n      // Event listeners to be bound when we open the modal:\n      window.addEventListener('keyup', handleKeyUp);\n      nextButton.addEventListener('click', showNextImage);\n      prevButton.addEventListener('click', showPrevImage);\n    }\n  \n    function closeModal() {\n      modal.classList.remove('open');\n      // TODO: add event listeners for clicks and keyboard..\n      window.removeEventListener('keyup', handleKeyUp);\n      nextButton.removeEventListener('click', showNextImage);\n      prevButton.removeEventListener('click', showPrevImage);\n    }\n  \n    function handleClickOutside(e) {\n      if (e.target === e.currentTarget) {\n        closeModal();\n      }\n    }\n  \n    function handleKeyUp(event) {\n      if (event.key === 'Escape') return closeModal();\n      if (event.key === 'ArrowRight') return showNextImage();\n      if (event.key === 'ArrowLeft') return showPrevImage();\n    }\n  \n    function showNextImage() {\n      showImage(currentImage.nextElementSibling || gallery.firstElementChild);\n    }\n    function showPrevImage() {\n      showImage(currentImage.previousElementSibling || gallery.lastElementChild);\n    }\n  \n    function showImage(el) {\n      if (!el) {\n        console.info('no image to show');\n        return;\n      }\n      // update the modal with this info\n      console.log(el);\n      modal.querySelector('img').src = el.src;\n      modal.querySelector('h2').textContent = el.title;\n      modal.querySelector('figure p').textContent = el.dataset.description;\n      currentImage = el;\n      openModal();\n    }\n  \n    // These are our Event Listeners!\n    images.forEach(image =>\n      image.addEventListener('click', e => showImage(e.currentTarget))\n    );\n  \n    // loop over each image\n    images.forEach(image => {\n      // attach an event listener for each image\n      image.addEventListener('keyup', e => {\n        // when that is keyup'd, check if it was enter\n        if (e.key === 'Enter') {\n          // if it was, show that image\n          showImage(e.currentTarget);\n        }\n      });\n    });\n  \n    modal.addEventListener('click', handleClickOutside);\n  }\n  \n  // Use it on the page\n\n  Gallery(document.querySelector('.gallery-section-full'));\n\n\n"]}