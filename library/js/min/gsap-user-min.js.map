{"version":3,"sources":["../gsap-user.js"],"names":["gsap","registerPlugin","ScrollTrigger","scrollContainer","document","querySelector","timelineBlock","querySelectorAll","faqNav","faqAnswers","withParallax","utils","toArray","ourPortfolioPage","locoScroll","LocomotiveScroll","el","smooth","getDirection","direction","on","update","scrollerProxy","scrollTop","value","arguments","length","scrollTo","scroll","instance","y","getBoundingClientRect","top","left","width","window","innerWidth","height","innerHeight","pinType","style","transform","args","line","to","yPercent","duration","ease","transformOrigin","hero","currentElements","header","menuToggle","logo","button","classList","contains","add","progress","remove","halfHeight","item","clientHeight","forEach","section","image","scrollTrigger","trigger","start","end","scrub","scroller","block","pinSteps","stages","lastStage","create","endTrigger","pin","stage","index","newIndex","links","color","getAttribute","title","desc","circle","tl","timeline","set","autoAlpha","backgroundColor","pipe","animation","concat","Math","max","documentElement","toggleClass","targets","className","link","target","addEventListener","e","preventDefault","offset","FAQmenu","options","_classCallCheck","this","faqBar","menu","answers","innerFaqBar","faqQuestions","_toConsumableArray","faqTopLevel","init","_createClass","key","_this","_this2","targetDetail","detail","removeAttribute","fixInPlace","collapse","linkTo","PortfolioSlider","destroy","horizonScroll","map","x","a","b","c","d","clamp","num","min","progressBar","cache","current","images","page","pageInner","scrollItems","_this3","setTimeout","stagger","fadeIn","bind","_this4","eventListeners","obj","console","log","distance","limit","howMuchScrolled","mapRange","widthToProgress","_i","_Object$keys","Object","keys","brightnessVal","filter","refresh"],"mappings":"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","sourcesContent":["gsap.registerPlugin(ScrollTrigger)\n\n//variables\n\nconst scrollContainer = document.querySelector('.locomotive-scroll-container')\nconst timelineBlock = document.querySelectorAll('.case-kit')\nconst faqNav = document.querySelector('.ns-faq-main-nav')\nconst faqAnswers = document.querySelector('.faq-qa-inner')\nconst withParallax = gsap.utils.toArray(\".with-parallax\")\nconst ourPortfolioPage = document.querySelector('.portfolio-our-projects-m')\n\nlet lastScroll = 0\n\n\n// Locomotive Scroll\n//---------------------------------------------------------------------------------------------------------\n\n\nconst locoScroll = new LocomotiveScroll({\n    el: scrollContainer,\n    smooth: true,\n    getDirection: true,\n    direction: 'vertical'\n  }); \n\n\n  // each time Locomotive Scroll updates, tell ScrollTrigger to update too (sync positioning)\n  locoScroll.on(\"scroll\", ScrollTrigger.update);\n\n  // when we scroll with locomotive scroll update scrolltrigger\n// locoScroll.on(\"scroll\", ScrollTrigger.update);\n\nScrollTrigger.scrollerProxy(scrollContainer, {\n    scrollTop(value) {\n      return arguments.length ? locoScroll.scrollTo(value, 0, 0) :    locoScroll.scroll.instance.scroll.y;\n}, // we don't have to define a scrollLeft because we're only scrolling vertically.\ngetBoundingClientRect() {\nreturn {top: 0, left: 0, width: window.innerWidth, height: window.innerHeight};\n},\n// LocomotiveScroll handles things completely differently on mobile devices - it doesn't even transform the container at all! So to get the correct behavior and avoid jitters, we should pin things with position: fixed on mobile. We sense it by checking to see if there's a transform applied to the container (the LocomotiveScroll-controlled element).\npinType: scrollContainer.style.transform ? \"transform\" : \"fixed\"\n});\n\n\n  locoScroll.on(\"scroll\", function (args) {\n\n    // onscroll remove line from header\n    const line = document.querySelector('.homepage-line')\n\n    if (line) {\n        gsap.to( line,{ yPercent: 110, duration: 0.3, ease: \"back.inOut(1.7)\", transformOrigin: 'top'})\n    }\n\n\n\n    const hero = args.currentElements['hero']\n    const header = document.querySelector('header')\n    const menuToggle = document.querySelector('.menu_toggle')\n    const logo = document.querySelector('.logo-container')\n    const button = document.querySelector('.h-top-button')\n\n\n\n    if (hero) {\n\n      if (hero.el.classList.contains('basic-hero')) {\n        header.classList.add('header-frosted-js')\n        return\n      }\n      \n      // if hero make logo white \n\n      if (hero.progress >= 0.8) {\n        header.classList.add('header-frosted-js')\n        menuToggle.classList.remove('white_toggle')\n        logo.classList.remove('white_letter')\n        button.classList.remove('white_background')\n\n      } else {\n        menuToggle.classList.add('white_toggle')\n        header.classList.remove('header-frosted-js')\n        logo.classList.add('white_letter')\n        button.classList.add('white_background')\n\n      }\n\n      hero.progress >= 0.8 ?  header.classList.add('header-frosted-js') :  header.classList.remove('header-frosted-js')\n    }\n\n\n\n   // console.log(args)\n\n  });\n\n\n\n  //---------------------------------------------------------------------------------------------------------\n\n// HELPER STUFF\n\n\n    // get viewport height\n    const getVh = () => {\n      const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n      return vh;\n  }\n\n  // about half height\n const halfHeight = (item) => {\n      const height = (item.clientHeight / 2 ) - item.clientHeight * 0.2\n   // console.log(height)\n\n      return height\n      \n    }\n\n//----------------------------------------------------------------------------------------------------------\n\n\n\n\n    // Gutenberg blocks\n    //----------------------------------------------------------------------------------------------------------\n\n\n\n    if (withParallax) {\n\n      withParallax.forEach(section => {\n        //get the image from each section\n        const image =  section.querySelector(\"img\")\n    \n        //create tween for the image parallax effeckt\n        gsap.to(image, { \n          yPercent: 25,\n          ease: \"none\",\n        \n          scrollTrigger: {\n            trigger: section,\n            start: \"top center+=20%\",\n            end: \"bottom top\",\n            scrub: true,\n            scroller: scrollContainer\n          }\n        })\n      }) //end with parallax\n    }\n\n\n    if (timelineBlock) {\n\n      timelineBlock.forEach(block => {\n\n          // variables\n          const pinSteps = block.querySelector('.scroll-tab')\n          const stages = gsap.utils.toArray(block.querySelectorAll('.ck-stage'))\n          const lastStage = stages.length - 1\n\n         // console.log(stages, stages[lastStage])\n\n          // pin scroll-box\n          ScrollTrigger.create({\n              trigger: pinSteps,\n              start: \"top center\",\n              endTrigger: stages[lastStage],\n              end: \"center center\",\n              scroller: scrollContainer,\n              pin: true\n\n          })\n\n          stages.forEach((stage, index) => {\n              const links = gsap.utils.toArray(pinSteps.querySelectorAll('.scroll--menu_item'))\n              const color = links[index].getAttribute('data-color')\n              const title = stage.querySelector('.case__title')\n              const desc = stage.querySelector('.case__desc')\n              const circle = links[index].querySelector('.inner-circle')\n              let newIndex\n            \n\n              if (index === 0) {\n                newIndex = -1\n              } else if (index > 0) {\n                newIndex = index - 1\n              }\n\n\n\n              let tl = gsap.timeline()\n\n              gsap.set(title, { autoAlpha: 0, yPercent: 105})\n              gsap.set(desc, { autoAlpha: 0, yPercent: 20})\n\n              tl\n                  .to(title, { autoAlpha: 1, yPercent: 0, duration: 1, ease: \"Power4.easeOut.easeOut\", }, 0)\n                  .to(desc, { autoAlpha: 1, yPercent: 0, duration: 1, ease: \"Power4.easeOut.easeOut\", }, 0.2)\n                  .to(circle, { backgroundColor: color, width: '100%', height: '100%', duration: 0.2 }, 0)\n\n              if (newIndex >= 0) {\n                const pipe = links[newIndex].querySelector('.inner-pipe')\n                tl.to(pipe, {backgroundColor: color, height: '100%', duration: 0.2 }, 0)\n              }\n\n                 \n\n\n             // console.log('link colour is' + color)\n\n              //add active class\n              ScrollTrigger.create({\n                  trigger: stage,\n                  start: 'top center',\n                  animation: tl,\n                  scroller: scrollContainer,\n                  end: () =>`+=${stage.clientHeight+ getVh() / 10}`,\n               //   end: () =>`+=${lastStage.clientHeight / 2}`,\n                //  markers: true,\n                  toggleClass: {\n                      targets: links[index],\n                      className: \"js-tab-visible\",\n                  }\n              })\n\n              // when we click on a link scroll to that section\n\n              links.forEach(link => {\n          \n                  const target = link.getAttribute('href');\n                \n          \n                  link.addEventListener('click', (e) => {\n                      e.preventDefault();\n                      // use loco scroll to scroll to section\n\n                      locoScroll.scrollTo(target, {offset: -halfHeight(stage)})\n                  });\n          \n              });\n              \n          })\n\n\n\n\n      })\n  }\n\n\n// CLASS COMPONENTS\n//------------------------------------------------------------------------\nif (faqNav) {\n\n  // TODO! Collapse all FAQ'S when clicking on new top-link\nclass FAQmenu {\n\n  constructor (options) {\n      this.faqBar = options.menu\n      this.faqAnswers = options.answers\n      this.innerFaqBar = this.faqBar.querySelector('.ns-nav-faqs')\n      this.faqQuestions = [...this.innerFaqBar.querySelectorAll('.faq-sm-link')]\n      this.faqTopLevel = [...this.innerFaqBar.querySelectorAll('.top-level details')]\n      this.stages = [...this.faqAnswers.querySelectorAll('.faq-qa-item')]\n      this.lastStage = this.stages.length - 1\n\n\n\n      // init menu\n      this.init()\n\n  }\n\n  linkTo () {\n\n\n      this.stages.forEach( stage => {\n\n          // when we click on a link scroll to that section\n\n          this.faqQuestions.forEach(link => {\n\n              const target = link.getAttribute('href');\n              \n      \n              link.addEventListener('click', (e) => {\n                  e.preventDefault();\n                  // use loco scroll to scroll to section\n  \n                  locoScroll.scrollTo(target, {offset: -halfHeight(stage)})\n              });\n      \n          });\n\n      })\n\n\n\n  }\n\n  collapse() {\n\n // close all tabs when opening a new tab\n\n      // Add the onclick listeners.\n      this.faqTopLevel.forEach((targetDetail) => {\n          targetDetail.addEventListener(\"click\", () => {\n          // Close all the details that are not targetDetail.\n          this.faqTopLevel.forEach((detail) => {\n              if (detail !== targetDetail) {\n              detail.removeAttribute(\"open\");\n              }\n          });\n          });\n      });\n\n  }\n\n  fixInPlace () {\n\n          // pin scroll-box\n          ScrollTrigger.create({\n          trigger: this.faqBar,\n          start: \"top top+=10%\",\n          endTrigger: this.stages[this.lastStage],\n          end: \"center center\",\n          scroller: scrollContainer,\n          pin: true\n\n      })\n\n  }\n\n\n\n  init () {\n\n      this.fixInPlace()\n\n      this.collapse()\n\n      this.linkTo()\n\n\n\n  }\n\n\n}\n\n\n  const faqMenu = new FAQmenu({ menu: faqNav, answers: faqAnswers })\n}\n\nif (ourPortfolioPage) {\n  class PortfolioSlider {\n\n    constructor (options) {\n\n        locoScroll.destroy()\n\n        this.horizonScroll = new LocomotiveScroll({\n            el: scrollContainer,\n            smooth: true,\n            direction: 'horizontal'\n          }); \n\n          this.map = (x, a, b, c, d) => (x - a) * (d - c) / (b - a) + c;\n          this.clamp = (num, min, max) => num <= min ? min : num >= max ? max : num\n          this.progressBar = document.querySelector('.inner-pb')\n\n          this.scroll = {cache: 0, current: 0};\n          this.images = [...document.querySelectorAll('.blog__image')]\n\n\n          // portfolio page info\n          this.page = document.querySelector('.portfolio-our-projects-m')\n          this.pageInner = this.page.querySelector('.inner-pp-section')\n          this.scrollItems = [...this.pageInner.querySelectorAll('.pp__item')]\n\n          this.horizonScroll.update()\n\n\n\n                  // init menu\n        this.init()\n\n\n\n\n    }\n\n    fadeIn() {\n\n        setTimeout( () => {\n\n       // fade them in up and in one by one\n        gsap.to(this.scrollItems, {yPercent:0, duration:1.2, stagger: 0.6, autoAlpha: 1,  ease: \"power1.easeIn\"})\n        }, 500);\n\n\n \n\n    }\n\n    eventListeners() {\n\n        // add event listener to toggle menu button\n        document.addEventListener('DOMContentLoaded',  this.fadeIn.bind(this))\n\n\n      }\n\n    init() {\n\n        // set all scrollitems to invisible\n        gsap.set( this.scrollItems,{ autoAlpha: 0, yPercent: 25 })\n\n        this.eventListeners()\n\n        this.horizonScroll.on('scroll', (obj) => {\n\n            console.log(obj.currentElements)\n            this.scroll.current = obj.scroll.x;\n            const distance = this.scroll.current - this.scroll.cache;\n            this.scroll.cache = this.scroll.current;\n            const skewVal = this.map(distance, -50, 50, -15, 15);\n\n        //    this.images.forEach(el => el.style.transform = 'skewX('+ this.clamp(skewVal, -3, 3)+'deg)');\n\n            console.log('how muc we scrolled ' + obj.scroll.x + 'how much too scroll' + obj.limit.x)\n\n            //update progress bar with width using gsap utility\n            // map range from pixels to 100\n            let widthToProgress = gsap.utils.mapRange(0, obj.limit.x, 0, 100)\n            let howMuchScrolled = widthToProgress(obj.scroll.x)\n\n            this.progressBar.style.width = `${howMuchScrolled}%`\n\n            console.log(howMuchScrolled)\n\n\n            for (const key of Object.keys(obj.currentElements)) {\n                if ( obj.currentElements[key].el.classList.contains('pp-item-block__inner') ) {\n                    let progress = obj.currentElements[key].progress;\n                    \n                    const brightnessVal = progress < 0.5 ? this.clamp(this.map(progress,0,0.5,0,1),0.2,1) : this.clamp(this.map(progress,0.5,1,1,0),0.2,1);\n                    obj.currentElements[key].el.style.filter = `opacity(${brightnessVal})`\n                }\n            }\n        });\n\n          this.horizonScroll.update()\n    }\n}\n\n\n  const portfolioPage = new PortfolioSlider()\n}\n  \n\n\n  // last bits of the locomotive scroll\n  //-------------------------------------------------------------------------------------------\n\n\n    // PUT SCROLL TRIGGER + GSAP CODE HERE\n\n    // each time the window updates, we should refresh ScrollTrigger and then update LocomotiveScroll. \n    ScrollTrigger.addEventListener(\"refresh\", () => locoScroll.update());\n\n    // after everything is set up, refresh() ScrollTrigger and update LocomotiveScroll because padding may have been added for pinning, etc.\n    ScrollTrigger.refresh();"]}