{"version":3,"sources":["../a11y.js"],"names":["$","on","e","which","preventDefault","this","parent","prev","children","focus","next","length","find","first","parents","jQuery","toggle","is","addClass","attr","removeClass","is_webkit","navigator","userAgent","toLowerCase","indexOf","is_opera","is_ie","document","getElementById","window","addEventListener","element","id","location","hash","substring","test","tagName","tabIndex","ready","commentForm","prepend","list","statusdiv","click","submit","formdata","serialize","remove","hasError","each","trim","val","labelText","html","append","plateComments","required","value","plateValidateEmail","emailInvalid","error","processing","formurl","ajax","type","url","data","dataType","XMLHttpRequest","textStatus","errorThrown","flood","success","message","response","status","has"],"mappings":"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","sourcesContent":["/*------------------------------------\n * Theme: Plate by studio.bio\n * File: Accessibility (a11y) scripts file\n * Author: Joshua Michaels\n * URI: https://studio.bio/themes/plate\n *------------------------------------\n *\n * Accessibility should be a priority in your theme. These\n * scripts shouldn't impede your development but will set some\n * good foundations down for a11y.\n *\n * Check here for some patterns, many of which are included here:\n * https://github.com/wpaccessibility/a11ythemepatterns\n *\n */\n\n// menu navigation with arrow keys\n;(function($) {\n    $('.menu-item a').on('keydown', function(e) {\n        // left key\n        if (e.which === 37) {\n            e.preventDefault()\n            $(this)\n                .parent()\n                .prev()\n                .children('a')\n                .focus()\n        }\n        // right key\n        else if (e.which === 39) {\n            e.preventDefault()\n            $(this)\n                .parent()\n                .next()\n                .children('a')\n                .focus()\n        }\n        // down key\n        else if (e.which === 40) {\n            e.preventDefault()\n            if ($(this).next().length) {\n                $(this)\n                    .next()\n                    .find('li:first-child a')\n                    .first()\n                    .focus()\n            } else {\n                $(this)\n                    .parent()\n                    .next()\n                    .children('a')\n                    .focus()\n            }\n        }\n        // up key\n        else if (e.which === 38) {\n            e.preventDefault()\n            if (\n                $(this)\n                    .parent()\n                    .prev().length\n            ) {\n                $(this)\n                    .parent()\n                    .prev()\n                    .children('a')\n                    .focus()\n            } else {\n                $(this)\n                    .parents('ul')\n                    .first()\n                    .prev('a')\n                    .focus()\n            }\n        }\n    })\n})(jQuery)\n\n// Aria Responsive Menu toggle\n;(function($) {\n    'use strict'\n    // menu toggle (adjust for your responsive menu)\n    $('.menu-toggle').on('click', function() {\n        $('.primary-menu nav ul').toggle()\n        var visible = $('.primary-menu nav ul').is(':visible')\n        if (visible) {\n            $(this)\n                .addClass('open')\n                .attr('aria-expanded', 'true')\n        } else {\n            $(this)\n                .removeClass('open')\n                .attr('aria-expanded', 'false')\n        }\n    })\n})(jQuery)\n\n// Skip Link script\n;(function() {\n    var is_webkit = navigator.userAgent.toLowerCase().indexOf('webkit') > -1,\n        is_opera = navigator.userAgent.toLowerCase().indexOf('opera') > -1,\n        is_ie = navigator.userAgent.toLowerCase().indexOf('msie') > -1\n\n    if (\n        (is_webkit || is_opera || is_ie) &&\n        document.getElementById &&\n        window.addEventListener\n    ) {\n        window.addEventListener(\n            'hashchange',\n            function() {\n                var id = location.hash.substring(1),\n                    element\n\n                if (!/^[A-z0-9_-]+$/.test(id)) {\n                    return\n                }\n\n                element = document.getElementById(id)\n\n                if (element) {\n                    if (\n                        !/^(?:a|select|input|button|textarea)$/i.test(\n                            element.tagName\n                        )\n                    ) {\n                        element.tabIndex = -1\n                    }\n\n                    element.focus()\n                }\n            },\n            false\n        )\n    }\n})()\n\n// Comment form script with ARIA labels and validation\n/**\n * Handle submission of comment form. Checks field values before submitting.\n */\n\njQuery('document').ready(function($) {\n    var commentForm = $('#commentform')\n    /**\n     * Add aria-live attribute so message errors appended to input fields will be read by assistive technology.\n     */\n\n    commentForm.attr('aria-live', 'polite')\n    /**\n     * Add a comment status region with role=status to provide feedback on errors or successes.\n     * Set tabindex=-1 so that this container can receive focus.\n     */\n    commentForm.prepend(\n        '<div id=\"comment-status\" aria-live=\"assertive\" role=\"status\" tabindex=\"-1\"></div>'\n    )\n    var statusdiv = $('#comment-status')\n    var list\n    $('a.comment-reply-link').click(function() {\n        list = $(this)\n            .parents('.comment')\n            .attr('id')\n    })\n\n    commentForm.submit(function() {\n        //serialize and store form data in a variable\n        var formdata = commentForm.serialize()\n\n        $('#commentform .plate-comment-error').remove()\n        $('#commentform .plate-field-error').remove()\n        var hasError = false\n        /**\n         * Find all form fields with aria-required=true to test values before submitting.\n         * If error generated, print error.\n         */\n        $('#commentform [aria-required=true]').each(function() {\n            var id = $(this).attr('id') + '-error'\n            if ($.trim($(this).val()) == '') {\n                var labelText = $(this)\n                    .prev('label')\n                    .html()\n                // add aria-describedby with reference ID for error message.\n                $(this).attr('aria-describedby', id)\n                $(this)\n                    .parent()\n                    .append(\n                        ' <span class=\"plate-field-error\" id=\"' +\n                            id +\n                            '\">' +\n                            labelText +\n                            ': ' +\n                            plateComments.required +\n                            '</span>'\n                    )\n                hasError = true\n            }\n            if (\n                $(this).attr('name') == 'email' &&\n                $.trim($(this).val()) != ''\n            ) {\n                var value = $(this).val()\n                var valid = plateValidateEmail(value)\n                if (!valid) {\n                    $(this).attr('aria-describedby', id)\n                    $(this)\n                        .parent()\n                        .append(\n                            ' <span class=\"plate-field-error\"id=\"' +\n                                id +\n                                '\">' +\n                                plateComments.emailInvalid +\n                                '</span>'\n                        )\n                    hasError = true\n                }\n            }\n        })\n\n        /**\n         * If an error is generated, return without submitting the form & set focus to status div.\n         */\n        if (hasError) {\n            statusdiv\n                .html(\n                    '<p class=\"plate-comment-error\">' +\n                        plateComments.error +\n                        '</p>'\n                )\n                .focus()\n            return false\n        }\n\n        /**\n         * If no field errors, notify user that message is processing.\n         */\n        statusdiv.html(\n            '<p class=\"yourtheme-comment-processing\">' +\n                plateComments.processing +\n                '</p>'\n        )\n\n        //Extract action URL from commentform\n        var formurl = commentForm.attr('action')\n\n        //Post Form with data\n        $.ajax({\n            type: 'post',\n            url: formurl,\n            data: formdata,\n            dataType: 'json',\n            error: function(XMLHttpRequest, textStatus, errorThrown) {\n                // [localize]\n                statusdiv\n                    .html(\n                        '<p class=\"plate-comment-error\">' +\n                            plateComments.flood +\n                            '</p>'\n                    )\n                    .focus()\n            },\n            success: function(data, textStatus) {\n                var success = data.success\n                var message = data.response\n                var status = data.status\n                if (success) {\n                    /**\n                     * Because the successful comment message includes a link, set focus to the message to give easy access to user.\n                     */\n\n                    statusdiv\n                        .html(\n                            '<p class=\"plate-comment-success\" >' +\n                                status +\n                                '</p>'\n                        )\n                        .focus()\n                    //alert(data);\n\n                    if ($('#comments').has('ol.commentlist').length > 0) {\n                        if (list != null) {\n                            $('#' + list).prepend(message)\n                        } else {\n                            $('.commentlist').append(message)\n                        }\n                    } else {\n                        $('#comments').append('<ol class=\"commentlist\"></ol>')\n                        $('ol.commentlist').html(message)\n                    }\n                    commentForm.find('textarea[name=comment]').val('')\n                } else {\n                    /**\n                     * Set focus to error field so user can quickly tab forward into comment fields.\n                     */\n                    statusdiv\n                        .html(\n                            '<p class=\"plate-comment-error\" >' + status + '</p>'\n                        )\n                        .focus()\n                    commentForm.find('textarea[name=comment]').val('')\n                }\n            }\n        })\n        return false\n    })\n\n    /**\n     * Function to validate email format.\n     *\n     * @param value Email address to test\n     *\n     * @return boolean\n     */\n    function plateValidateEmail(value) {\n        var filter = /^([\\w-\\+.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\n        if (filter.test(value)) {\n            return true\n        } else {\n            return false\n        }\n    }\n})\n"]}